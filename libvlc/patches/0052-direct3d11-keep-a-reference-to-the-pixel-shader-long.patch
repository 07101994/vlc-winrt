From 3e70d68003de7c55a27601221eb49f71a4f141ac Mon Sep 17 00:00:00 2001
From: Steve Lhomme <robux4@videolabs.io>
Date: Tue, 31 Jan 2017 10:38:03 +0100
Subject: [PATCH 52/62] direct3d11: keep a reference to the pixel shader longer

---
 modules/video_output/win32/direct3d11.c | 19 ++++++++++++-------
 1 file changed, 12 insertions(+), 7 deletions(-)

diff --git a/modules/video_output/win32/direct3d11.c b/modules/video_output/win32/direct3d11.c
index dde32b5..9efffea 100644
--- a/modules/video_output/win32/direct3d11.c
+++ b/modules/video_output/win32/direct3d11.c
@@ -141,6 +141,7 @@ struct vout_display_sys_t
     ID3D11DeviceContext      *d3dcontext;      /* D3D context */
     d3d_quad_t               picQuad;
     const d3d_format_t       *picQuadConfig;
+    ID3D11PixelShader        *picQuadPixelShader;
 
     ID3D11RenderTargetView   *d3drenderTargetView;
     ID3D11DepthStencilView   *d3ddepthStencilView;
@@ -1681,13 +1682,12 @@ static int Direct3D11CreateResources(vout_display_t *vd, video_format_t *fmt)
 #endif
     vd->info.is_slow = !is_d3d11_opaque(fmt->i_chroma);
 
-    ID3D11PixelShader *pPicQuadShader;
-    hr = CompilePixelShader(vd, sys->d3dPxShader, &pPicQuadShader);
+    hr = CompilePixelShader(vd, sys->d3dPxShader, &sys->picQuadPixelShader);
     if (FAILED(hr))
     {
         sys->legacy_shader = true;
         msg_Dbg(vd, "fallback to legacy shader mode");
-        hr = CompilePixelShader(vd, sys->d3dPxShader, &pPicQuadShader);
+        hr = CompilePixelShader(vd, sys->d3dPxShader, &sys->picQuadPixelShader);
         if (FAILED(hr))
         {
             msg_Err(vd, "Failed to create the pixel shader. (hr=0x%lX)", hr);
@@ -1700,7 +1700,8 @@ static int Direct3D11CreateResources(vout_display_t *vd, video_format_t *fmt)
         hr = CompilePixelShader(vd, sys->psz_rgbaPxShader, &sys->pSPUPixelShader);
         if (FAILED(hr))
         {
-            ID3D11PixelShader_Release(pPicQuadShader);
+            ID3D11PixelShader_Release(sys->picQuadPixelShader);
+            sys->picQuadPixelShader = NULL;
             msg_Err(vd, "Failed to create the SPU pixel shader. (hr=0x%lX)", hr);
             return VLC_EGENERIC;
         }
@@ -1751,13 +1752,12 @@ static int Direct3D11CreateResources(vout_display_t *vd, video_format_t *fmt)
     }
     ID3D10Blob_Release(pVSBlob);
 
-    if (AllocQuad( vd, fmt, &sys->picQuad, sys->picQuadConfig, pPicQuadShader,
+    if (AllocQuad( vd, fmt, &sys->picQuad, sys->picQuadConfig, sys->picQuadPixelShader,
                    vd->fmt.projection_mode) != VLC_SUCCESS) {
-        ID3D11PixelShader_Release(pPicQuadShader);
+        ID3D11PixelShader_Release(sys->picQuadPixelShader);
         msg_Err(vd, "Could not Create the main quad picture. (hr=0x%lX)", hr);
         return VLC_EGENERIC;
     }
-    ID3D11PixelShader_Release(pPicQuadShader);
 
     ID3D11DeviceContext_IASetPrimitiveTopology(sys->d3dcontext, D3D11_PRIMITIVE_TOPOLOGY_TRIANGLELIST);
 
@@ -2279,6 +2279,11 @@ static void Direct3D11DestroyResources(vout_display_t *vd)
         ID3D11VertexShader_Release(sys->pSPUPixelShader);
         sys->pSPUPixelShader = NULL;
     }
+    if (sys->picQuadPixelShader)
+    {
+        ID3D11PixelShader_Release(sys->picQuadPixelShader);
+        sys->picQuadPixelShader = NULL;
+    }
 #if defined(HAVE_ID3D11VIDEODECODER)
     if( sys->context_lock != INVALID_HANDLE_VALUE )
     {
-- 
2.10.1.windows.1

