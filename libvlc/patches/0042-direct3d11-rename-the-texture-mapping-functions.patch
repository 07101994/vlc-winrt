From 88a54b7ddfe743a836612002e8527ac3dc27f96c Mon Sep 17 00:00:00 2001
From: Steve Lhomme <robux4@videolabs.io>
Date: Tue, 24 Jan 2017 12:38:52 +0100
Subject: [PATCH 42/61] direct3d11: rename the texture mapping functions

And move the code to avoid declaration + definition.
Make Direct3D11UnmapPoolTexture void to be compatible with the pool unlock
prototype.
---
 modules/video_output/win32/direct3d11.c | 53 ++++++++++++++++-----------------
 1 file changed, 25 insertions(+), 28 deletions(-)

diff --git a/modules/video_output/win32/direct3d11.c b/modules/video_output/win32/direct3d11.c
index 4673d0e..8050d52 100644
--- a/modules/video_output/win32/direct3d11.c
+++ b/modules/video_output/win32/direct3d11.c
@@ -217,8 +217,6 @@ static void Direct3D11DestroyPool(vout_display_t *);
 
 static void DestroyDisplayPicture(picture_t *);
 static void DestroyDisplayPoolPicture(picture_t *);
-static int  Direct3D11MapTexture(picture_t *);
-static int  Direct3D11UnmapTexture(picture_t *);
 static void Direct3D11DeleteRegions(int, picture_t **);
 static int Direct3D11MapSubpicture(vout_display_t *, int *, picture_t ***, subpicture_t *);
 
@@ -404,6 +402,28 @@ static const char *globPixelShaderBiplanarYUYV_2RGB = "\
   }\
 ";
 
+static int Direct3D11MapPoolTexture(picture_t *picture)
+{
+    picture_sys_pool_t *p_sys = (picture_sys_pool_t*) picture->p_sys;
+    vout_display_t     *vd = p_sys->vd;
+    D3D11_MAPPED_SUBRESOURCE mappedResource;
+    HRESULT hr;
+    hr = ID3D11DeviceContext_Map(vd->sys->d3dcontext, (ID3D11Resource *)p_sys->texture, 0, D3D11_MAP_WRITE_DISCARD, 0, &mappedResource);
+    if( FAILED(hr) )
+    {
+        msg_Dbg( vd, "failed to map the texture (hr=0x%lX)", hr );
+        return VLC_EGENERIC;
+    }
+    return CommonUpdatePicture(picture, NULL, mappedResource.pData, mappedResource.RowPitch);
+}
+
+static void Direct3D11UnmapPoolTexture(picture_t *picture)
+{
+    picture_sys_pool_t *p_sys = (picture_sys_pool_t*)picture->p_sys;
+    vout_display_t     *vd = p_sys->vd;
+    ID3D11DeviceContext_Unmap(vd->sys->d3dcontext, (ID3D11Resource *)p_sys->texture, 0);
+}
+
 #if !VLC_WINSTORE_APP
 static int OpenHwnd(vout_display_t *vd)
 {
@@ -1162,7 +1182,7 @@ static void Display(vout_display_t *vd, picture_t *picture, subpicture_t *subpic
     ID3D11DeviceContext_ClearDepthStencilView(sys->d3dcontext, sys->d3ddepthStencilView, D3D11_CLEAR_DEPTH | D3D11_CLEAR_STENCIL, 1.0f, 0);
 
     if ( !is_d3d11_opaque(picture->format.i_chroma))
-        Direct3D11UnmapTexture(picture);
+        Direct3D11UnmapPoolTexture(picture);
 
     /* Render the quad */
     if (is_d3d11_opaque(picture->format.i_chroma) && !sys->legacy_shader)
@@ -1773,8 +1793,8 @@ static int Direct3D11CreatePool(vout_display_t *vd, video_format_t *fmt)
     memset(&pool_cfg, 0, sizeof(pool_cfg));
     pool_cfg.picture_count = 1;
     pool_cfg.picture       = &picture;
-    pool_cfg.lock          = Direct3D11MapTexture;
-    //pool_cfg.unlock        = Direct3D11UnmapTexture;
+    pool_cfg.lock          = Direct3D11MapPoolTexture;
+    //pool_cfg.unlock        = Direct3D11UnmapPoolTexture;
 
     sys->sys.pool = picture_pool_NewExtended(&pool_cfg);
     if (!sys->sys.pool) {
@@ -2269,29 +2289,6 @@ static void Direct3D11DestroyResources(vout_display_t *vd)
     msg_Dbg(vd, "Direct3D11 resources destroyed");
 }
 
-static int Direct3D11MapTexture(picture_t *picture)
-{
-    picture_sys_pool_t *p_sys = (picture_sys_pool_t*) picture->p_sys;
-    vout_display_t     *vd = p_sys->vd;
-    D3D11_MAPPED_SUBRESOURCE mappedResource;
-    HRESULT hr;
-    hr = ID3D11DeviceContext_Map(vd->sys->d3dcontext, (ID3D11Resource *)p_sys->texture, 0, D3D11_MAP_WRITE_DISCARD, 0, &mappedResource);
-    if( FAILED(hr) )
-    {
-        msg_Dbg( vd, "failed to map the texture (hr=0x%lX)", hr );
-        return VLC_EGENERIC;
-    }
-    return CommonUpdatePicture(picture, NULL, mappedResource.pData, mappedResource.RowPitch);
-}
-
-static int Direct3D11UnmapTexture(picture_t *picture)
-{
-    picture_sys_pool_t *p_sys = (picture_sys_pool_t*)picture->p_sys;
-    vout_display_t     *vd = p_sys->vd;
-    ID3D11DeviceContext_Unmap(vd->sys->d3dcontext, (ID3D11Resource *)p_sys->texture, 0);
-    return VLC_SUCCESS;
-}
-
 static void Direct3D11DeleteRegions(int count, picture_t **region)
 {
     for (int i = 0; i < count; ++i) {
-- 
2.10.1.windows.1

