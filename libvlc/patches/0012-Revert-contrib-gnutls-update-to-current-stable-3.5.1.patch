From f0b8ed47319c890072c59eaa34cb05839393d383 Mon Sep 17 00:00:00 2001
From: Martin Finkel <martin@videolabs.io>
Date: Tue, 16 Jan 2018 11:35:03 +0100
Subject: [PATCH 12/14] Revert "contrib: gnutls: update to current stable
 3.5.16 (fixes #19350)"

This reverts commit 496d5f426d7fde1bb60c90a0009d222a52fd582d.
---
 contrib/src/gnutls/32b5628-upstream.patch        | 42 -------------------
 contrib/src/gnutls/SHA512SUMS                    |  2 +-
 contrib/src/gnutls/gnutls-android.patch          | 11 +++++
 contrib/src/gnutls/gnutls-loadlibrary.patch      | 28 ++++++-------
 contrib/src/gnutls/gnutls-mingw64.patch          | 29 ++++++++++++++
 contrib/src/gnutls/gnutls-pkgconfig-static.patch |  9 ++---
 contrib/src/gnutls/gnutls-win32.patch            | 20 +++++-----
 contrib/src/gnutls/gnutls-winrt.patch            | 51 +++++++-----------------
 contrib/src/gnutls/rules.mak                     |  9 +++--
 contrib/src/gnutls/winrt-topendir.patch          | 39 ++++++++++--------
 10 files changed, 112 insertions(+), 128 deletions(-)
 delete mode 100644 contrib/src/gnutls/32b5628-upstream.patch
 create mode 100644 contrib/src/gnutls/gnutls-android.patch
 create mode 100644 contrib/src/gnutls/gnutls-mingw64.patch

diff --git a/contrib/src/gnutls/32b5628-upstream.patch b/contrib/src/gnutls/32b5628-upstream.patch
deleted file mode 100644
index 70ffdce..0000000
--- a/contrib/src/gnutls/32b5628-upstream.patch
+++ /dev/null
@@ -1,42 +0,0 @@
-From 32b56287cc9d07dfbbc2ee21b70a8fbe1f2d9f2f Mon Sep 17 00:00:00 2001
-From: Nikos Mavrogiannopoulos <nmav@gnutls.org>
-Date: Sat, 30 Dec 2017 19:57:08 +0100
-Subject: [PATCH] x509/verify: when verifying against a self signed certificate ignore issuer
-
-That is, ignore issuer when checking the issuer's parameters strength. That
-resolves the issue of marking self-signed certificates as with insecure
-parameters during verification.
-
-Resolves #347
-
-Signed-off-by: Nikos Mavrogiannopoulos <nmav@gnutls.org>
----
- lib/x509/verify.c | 12 +++++++-----
- 1 file changed, 7 insertions(+), 5 deletions(-)
-
-diff --git a/lib/x509/verify.c b/lib/x509/verify.c
-index 26b1ab3..a59e637 100644
---- a/lib/x509/verify.c
-+++ b/lib/x509/verify.c
-@@ -431,11 +431,13 @@ unsigned _gnutls_is_broken_sig_allowed(const gnutls_sign_entry_st *se, unsigned 
- 			_gnutls_debug_log(#level": certificate's security level is unacceptable\n"); \
- 			return gnutls_assert_val(0); \
- 		} \
--		sp = gnutls_pk_bits_to_sec_param(issuer_pkalg, issuer_bits); \
--		if (sp < level) { \
--			_gnutls_cert_log("issuer", issuer); \
--			_gnutls_debug_log(#level": certificate's issuer security level is unacceptable\n"); \
--			return gnutls_assert_val(0); \
-+		if (issuer) { \
-+			sp = gnutls_pk_bits_to_sec_param(issuer_pkalg, issuer_bits); \
-+			if (sp < level) { \
-+				_gnutls_cert_log("issuer", issuer); \
-+				_gnutls_debug_log(#level": certificate's issuer security level is unacceptable\n"); \
-+				return gnutls_assert_val(0); \
-+			} \
- 		} \
- 		break;
- 
---
-libgit2 0.26.0
-
diff --git a/contrib/src/gnutls/SHA512SUMS b/contrib/src/gnutls/SHA512SUMS
index e5e3af8..7292832 100644
--- a/contrib/src/gnutls/SHA512SUMS
+++ b/contrib/src/gnutls/SHA512SUMS
@@ -1 +1 @@
-451d3167be599ed8e0333dd7c9f8501fcb47b7aa871aeb461c368381c0b7ecd7e2026ec35dbbb2aa685cb2c3a22e9296e0a0699409e3744b731c1bb7e7e69f07  gnutls-3.5.16.tar.xz
+d75f6b4dea2dc742cd7f60ee0ee540d41b69991aaa937ca0138cfdf4a1e0dfaaa3863464303bfa5799e14ee02de252f71c59a7a9e57b96ff8af653e419edfd4e  gnutls-3.4.14.tar.xz
diff --git a/contrib/src/gnutls/gnutls-android.patch b/contrib/src/gnutls/gnutls-android.patch
new file mode 100644
index 0000000..d816768
--- /dev/null
+++ b/contrib/src/gnutls/gnutls-android.patch
@@ -0,0 +1,11 @@
+--- gnutls.old/gl/secure_getenv.c	2016-07-13 16:36:42.095099707 +0200
++++ gnutls/gl/secure_getenv.c	2016-07-13 16:43:29.440899856 +0200
+@@ -24,7 +24,7 @@
+ #  include <unistd.h>
+ # else
+ #  undef issetugid
+-#  ifdef _WIN32
++#  if defined (_WIN32) || defined(__ANDROID__)
+ #   define issetugid() 0
+ #  else
+ #   define issetugid() 1
diff --git a/contrib/src/gnutls/gnutls-loadlibrary.patch b/contrib/src/gnutls/gnutls-loadlibrary.patch
index 84a3230..2d9132b 100644
--- a/contrib/src/gnutls/gnutls-loadlibrary.patch
+++ b/contrib/src/gnutls/gnutls-loadlibrary.patch
@@ -1,6 +1,17 @@
---- gnutls-3.5.16/lib/system/keys-win.c	2016-11-05 19:12:02.000000000 +0100
-+++ gnutls-3.5.16/lib/system/keys-win.c.new	2017-12-26 16:29:00.221119300 +0100
-@@ -1426,7 +1426,7 @@
+--- gnutls/lib/system.c.orig	2016-07-08 14:39:45.104700999 +0200
++++ gnutls/lib/system.c	2016-07-08 14:40:28.276750643 +0200
+@@ -322,7 +322,7 @@
+ #ifdef _WIN32
+ #if defined(__MINGW32__) && !defined(__MINGW64_VERSION_MAJOR) && __MINGW32_MAJOR_VERSION <= 3 && __MINGW32_MINOR_VERSION <= 20
+ 	HMODULE crypto;
+-	crypto = LoadLibraryA("Crypt32.dll");
++	crypto = LoadLibrary(TEXT("Crypt32.dll"));
+ 
+ 	if (crypto == NULL)
+ 		return GNUTLS_E_CRYPTO_INIT_FAILED;
+--- gnutls/lib/system-keys-win.c.orig	2016-07-08 14:39:58.336716261 +0200
++++ gnutls/lib/system-keys-win.c	2016-07-08 14:40:12.568732630 +0200
+@@ -1059,7 +1059,7 @@
  	int ret;
  
  #ifdef DYN_NCRYPT
@@ -9,14 +20,3 @@
  	if (ncrypt_lib == NULL) {
  		return gnutls_assert_val(GNUTLS_E_CRYPTO_INIT_FAILED);
  	}
---- gnutls/lib/system.c.old	2017-12-28 15:24:07.479820602 +0100
-+++ gnutls/lib/system.c	2017-12-28 15:25:33.587817242 +0100
-@@ -50,7 +50,7 @@
- #if defined(_WIN32) && defined(NEED_CERT_ENUM_CRLS)
- 	/* used in system/certs.c */
- 	HMODULE crypto;
--	crypto = LoadLibraryA("Crypt32.dll");
-+	crypto = LoadLibrary(TEXT("Crypt32.dll"));
- 
- 	if (crypto == NULL)
- 		return GNUTLS_E_CRYPTO_INIT_FAILED;
diff --git a/contrib/src/gnutls/gnutls-mingw64.patch b/contrib/src/gnutls/gnutls-mingw64.patch
new file mode 100644
index 0000000..9f6bd38
--- /dev/null
+++ b/contrib/src/gnutls/gnutls-mingw64.patch
@@ -0,0 +1,29 @@
+--- gnutls-3.4.13/lib/system.c.orig	2016-05-27 22:40:06.000000000 +0200
++++ gnutls-3.4.13/lib/system.c	2016-06-29 15:36:26.645190212 +0200
+@@ -34,7 +34,7 @@
+ #ifdef _WIN32
+ # include <windows.h>
+ # include <wincrypt.h>
+-# if defined(__MINGW32__) && !defined(__MINGW64__) && __MINGW32_MAJOR_VERSION <= 3 && __MINGW32_MINOR_VERSION <= 20
++# if defined(__MINGW32__) && !defined(__MINGW64_VERSION_MAJOR) && __MINGW32_MAJOR_VERSION <= 3 && __MINGW32_MINOR_VERSION <= 20
+ typedef PCCRL_CONTEXT WINAPI(*CertEnumCRLsInStoreFunc) (HCERTSTORE
+ 							 hCertStore,
+ 							 PCCRL_CONTEXT
+@@ -300,7 +300,7 @@
+ int gnutls_system_global_init(void)
+ {
+ #ifdef _WIN32
+-#if defined(__MINGW32__) && !defined(__MINGW64__) && __MINGW32_MAJOR_VERSION <= 3 && __MINGW32_MINOR_VERSION <= 20
++#if defined(__MINGW32__) && !defined(__MINGW64_VERSION_MAJOR) && __MINGW32_MAJOR_VERSION <= 3 && __MINGW32_MINOR_VERSION <= 20
+ 	HMODULE crypto;
+ 	crypto = LoadLibraryA("Crypt32.dll");
+ 
+@@ -325,7 +325,7 @@
+ void gnutls_system_global_deinit(void)
+ {
+ #ifdef _WIN32
+-#if defined(__MINGW32__) && !defined(__MINGW64__) && __MINGW32_MAJOR_VERSION <= 3 && __MINGW32_MINOR_VERSION <= 20
++#if defined(__MINGW32__) && !defined(__MINGW64_VERSION_MAJOR) && __MINGW32_MAJOR_VERSION <= 3 && __MINGW32_MINOR_VERSION <= 20
+ 	FreeLibrary(Crypt32_dll);
+ #endif
+ #endif
diff --git a/contrib/src/gnutls/gnutls-pkgconfig-static.patch b/contrib/src/gnutls/gnutls-pkgconfig-static.patch
index 0a5ecfc..361d651 100644
--- a/contrib/src/gnutls/gnutls-pkgconfig-static.patch
+++ b/contrib/src/gnutls/gnutls-pkgconfig-static.patch
@@ -1,11 +1,10 @@
-diff -ru gnutls-3.5.16/lib/gnutls.pc.in gnutls-3.5.16.patched/lib/gnutls.pc.in
---- gnutls-3.5.16/lib/gnutls.pc.in	2017-03-28 20:20:50.000000000 +0300
-+++ gnutls-3.5.16.patched/lib/gnutls.pc.in	2017-12-26 16:47:54.502835713 +0200
+--- gnutls/lib/gnutls.pc.in    2015-11-03 21:47:28.000000000 +0000
++++ gnutls.patched/lib/gnutls.pc.in    2016-11-02 22:53:04.272156182 +0000
 @@ -19,6 +19,6 @@
  URL: http://www.gnutls.org/
  Version: @VERSION@
  Libs: -L${libdir} -lgnutls
--Libs.private: @LIBZ_PC@ @LIBINTL@ @LIBSOCKET@ @LIBNSL@ @LIBPTHREAD@ @LIB_SELECT@ @TSS_LIBS@ @GMP_LIBS@ @LIBUNISTRING@ @LIBIDN2_LIBS@
-+Libs.private: @LIBZ@ @LIBINTL@ @LIBSOCKET@ @LIBNSL@ @LIBPTHREAD@ @LIB_SELECT@ @TSS_LIBS@ @GMP_LIBS@ @LIBUNISTRING@ @LIBIDN2_LIBS@ @LIBIDN_LIBS@ @HOGWEED_LIBS@ @NETTLE_LIBS@
+-Libs.private: @LIBZ@ @LIBINTL@ @LIBSOCKET@ @LIBPTHREAD@ @LIBICONV@ @P11_KIT_LIBS@ @LIB_SELECT@ @TSS_LIBS@ @GMP_LIBS@
++Libs.private: @LIBZ@ @LIBINTL@ @LIBSOCKET@ @LIBPTHREAD@ @LIBICONV@ @P11_KIT_LIBS@ @LIB_SELECT@ @TSS_LIBS@ @GMP_LIBS@ @NETTLE_LIBS@ @LIBIDN_LIBS@ @HOGWEED_LIBS@
  @GNUTLS_REQUIRES_PRIVATE@
  Cflags: -I${includedir}
diff --git a/contrib/src/gnutls/gnutls-win32.patch b/contrib/src/gnutls/gnutls-win32.patch
index 7c07743..197476c 100644
--- a/contrib/src/gnutls/gnutls-win32.patch
+++ b/contrib/src/gnutls/gnutls-win32.patch
@@ -1,3 +1,13 @@
+--- gnutls-3.3.22/lib/gnutls.pc.in.orig	2016-03-10 16:17:25.955785469 +0100
++++ gnutls-3.3.22/lib/gnutls.pc.in	2016-03-10 16:20:49.979795202 +0100
+@@ -19,6 +19,6 @@
+ URL: http://www.gnutls.org/
+ Version: @VERSION@
+ Libs: -L${libdir} -lgnutls
+-Libs.private: @LIBZ@ @LIBINTL@ @LIBSOCKET@ @LIBPTHREAD@ @LIBICONV@ @P11_KIT_LIBS@ @LIB_SELECT@ @TSS_LIBS@ @GMP_LIBS@ @NETTLE_LIBS@ @LIBIDN_LIBS@ @HOGWEED_LIBS@
++Libs.private: @LIBZ@ @LIBINTL@ @LIBSOCKET@ -lcrypt32 @LIBPTHREAD@ @LIBICONV@ @P11_KIT_LIBS@ @LIB_SELECT@ @TSS_LIBS@ @GMP_LIBS@ @NETTLE_LIBS@ @LIBIDN_LIBS@ @HOGWEED_LIBS@
+ @GNUTLS_REQUIRES_PRIVATE@
+ Cflags: -I${includedir}
 --- gnutls.old/lib/includes/gnutls/gnutls.h.in	2016-07-01 22:44:49.319398504 +0200
 +++ gnutls/lib/includes/gnutls/gnutls.h.in	2016-07-01 22:48:00.515407625 +0200
 @@ -68,7 +68,7 @@
@@ -9,13 +19,3 @@
  #else
  # define _SYM_EXPORT
  #endif
---- gnutls-3.5.16/lib/gnutls.pc.in.orig	2017-12-26 16:20:40.969104489 +0100
-+++ gnutls-3.5.16/lib/gnutls.pc.in	2017-12-26 16:22:53.817108430 +0100
-@@ -19,6 +19,6 @@
- URL: http://www.gnutls.org/
- Version: @VERSION@
- Libs: -L${libdir} -lgnutls
--Libs.private: @LIBZ@ @LIBINTL@ @LIBSOCKET@ @LIBNSL@ @LIBPTHREAD@ @LIB_SELECT@ @TSS_LIBS@ @GMP_LIBS@ @LIBUNISTRING@ @LIBIDN2_LIBS@ @LIBIDN_LIBS@ @HOGWEED_LIBS@ @NETTLE_LIBS@
-+Libs.private: @LIBZ@ @LIBINTL@ @LIBSOCKET@ @LIBNSL@ -lcrypt32 @LIBPTHREAD@ @LIB_SELECT@ @TSS_LIBS@ @GMP_LIBS@ @LIBUNISTRING@ @LIBIDN2_LIBS@ @LIBIDN_LIBS@ @HOGWEED_LIBS@ @NETTLE_LIBS@
- @GNUTLS_REQUIRES_PRIVATE@
- Cflags: -I${includedir}
diff --git a/contrib/src/gnutls/gnutls-winrt.patch b/contrib/src/gnutls/gnutls-winrt.patch
index f3057f3..02cdfc6 100644
--- a/contrib/src/gnutls/gnutls-winrt.patch
+++ b/contrib/src/gnutls/gnutls-winrt.patch
@@ -1,41 +1,20 @@
---- gnutls-3.5.16/lib/system/keys-win.c	2017-12-26 16:29:00.221119300 +0100
-+++ gnutls-3.5.16/lib/system/keys-win.c.new	2017-12-26 16:33:02.501126487 +0100
-@@ -44,6 +44,18 @@
- #include <wincrypt.h>
- #include <winbase.h>
- 
-+#include <winapifamily.h>
-+#if WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_APP)
-+# if defined(_WIN32_WINNT) && _WIN32_WINNT >= 0x0A00 /* Univeral Winstore */
-+# undef CertOpenSystemStore
+--- gnutls/lib/system.c	2016-05-18 09:28:09.902830600 +0200
++++ gnutls/lib/system.c.winstore	2016-05-18 13:06:32.408396400 +0200
+@@ -34,6 +34,17 @@
+ #ifdef _WIN32
+ # include <windows.h>
+ # include <wincrypt.h>
++# include <winapifamily.h>
++# if WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_APP)
++#  if defined(_WIN32_WINNT) && _WIN32_WINNT >= 0x0A00 /* Univeral Winstore */
++#  undef CertOpenSystemStore
 +HCERTSTORE CertOpenSystemStore( HCRYPTPROV_LEGACY hprov, LPCSTR szSubsystemProtocol )
 +{
 +    return CertOpenStore( CERT_STORE_PROV_SYSTEM_A, X509_ASN_ENCODING, 0,
 +        CERT_SYSTEM_STORE_CURRENT_USER, szSubsystemProtocol );
 +}
-+# endif /* _WIN32_WINNT */
-+#endif /* WINAPI_FAMILY */
-+
- #define DYN_NCRYPT
- 
- #ifdef __MINGW32__
---- gnutls/lib/system/keys-win.c.old	2017-12-28 11:04:45.599954683 +0100
-+++ gnutls/lib/system/keys-win.c	2017-12-28 11:07:37.999947957 +0100
-@@ -624,6 +624,9 @@
-  -*/
- int _gnutls_privkey_import_system_url(gnutls_privkey_t pkey, const char *url)
- {
-+#if WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_APP)
-+    return GNUTLS_E_UNIMPLEMENTED_FEATURE;
-+#else
- 	uint8_t id[MAX_WID_SIZE];
- 	HCERTSTORE store = NULL;
- 	size_t id_size;
-@@ -873,6 +876,7 @@
- 
- 	CertCloseStore(store, 0);
- 	return ret;
-+#endif
- }
- 
- int _gnutls_x509_crt_import_system_url(gnutls_x509_crt_t crt, const char *url)
++#  endif /* _WIN32_WINNT */
++# endif /* WINAPI_FAMILY */
+ # if defined(__MINGW32__) && !defined(__MINGW64_VERSION_MAJOR) && __MINGW32_MAJOR_VERSION <= 3 && __MINGW32_MINOR_VERSION <= 20
+ typedef PCCRL_CONTEXT WINAPI(*Type_CertEnumCRLsInStore) (HCERTSTORE
+ 							 hCertStore,
diff --git a/contrib/src/gnutls/rules.mak b/contrib/src/gnutls/rules.mak
index 9cd29be..e1fd23b 100644
--- a/contrib/src/gnutls/rules.mak
+++ b/contrib/src/gnutls/rules.mak
@@ -1,7 +1,7 @@
 # GnuTLS
 
-GNUTLS_VERSION := 3.5.16
-GNUTLS_URL := ftp://ftp.gnutls.org/gcrypt/gnutls/v3.5/gnutls-$(GNUTLS_VERSION).tar.xz
+GNUTLS_VERSION := 3.4.14
+GNUTLS_URL := ftp://ftp.gnutls.org/gcrypt/gnutls/v3.4/gnutls-$(GNUTLS_VERSION).tar.xz
 
 ifdef BUILD_NETWORK
 ifndef HAVE_DARWIN_OS
@@ -19,10 +19,10 @@ $(TARBALLS)/gnutls-$(GNUTLS_VERSION).tar.xz:
 
 gnutls: gnutls-$(GNUTLS_VERSION).tar.xz .sum-gnutls
 	$(UNPACK)
-	$(APPLY) $(SRC)/gnutls/32b5628-upstream.patch
 	$(APPLY) $(SRC)/gnutls/gnutls-pkgconfig-static.patch
 ifdef HAVE_WIN32
 	$(APPLY) $(SRC)/gnutls/gnutls-win32.patch
+	$(APPLY) $(SRC)/gnutls/gnutls-mingw64.patch
 	$(APPLY) $(SRC)/gnutls/gnutls-loadlibrary.patch
 ifdef HAVE_WINSTORE
 	$(APPLY) $(SRC)/gnutls/gnutls-winrt.patch
@@ -31,9 +31,11 @@ endif
 endif
 ifdef HAVE_ANDROID
 	$(APPLY) $(SRC)/gnutls/no-create-time-h.patch
+	$(APPLY) $(SRC)/gnutls/gnutls-android.patch
 endif
 	$(APPLY) $(SRC)/gnutls/read-file-limits.h.patch
 ifdef HAVE_MACOSX
+	$(APPLY) $(SRC)/gnutls/gnutls-pkgconfig-osx.patch
 	$(APPLY) $(SRC)/gnutls/gnutls-disable-getentropy-osx.patch
 	$(APPLY) $(SRC)/gnutls/gnutls-disable-connectx-macos.patch
 endif
@@ -57,7 +59,6 @@ GNUTLS_CONF := \
 	--disable-doc \
 	--disable-tests \
 	--with-included-libtasn1 \
-	--with-included-unistring \
 	$(HOSTCONF)
 
 GNUTLS_ENV := $(HOSTVARS)
diff --git a/contrib/src/gnutls/winrt-topendir.patch b/contrib/src/gnutls/winrt-topendir.patch
index 6051cd0..cd09c7e 100644
--- a/contrib/src/gnutls/winrt-topendir.patch
+++ b/contrib/src/gnutls/winrt-topendir.patch
@@ -1,16 +1,17 @@
---- gnutls-3.5.16/lib/x509/verify-high2.c.orig	2016-12-19 15:10:59.000000000 +0100
-+++ gnutls-3.5.16/lib/x509/verify-high2.c	2017-12-26 16:39:02.565137168 +0100
-@@ -43,6 +43,9 @@
- # endif
- #endif
+--- gnutls/lib/x509/verify-high2.c.orig	2016-05-11 21:28:25.584504325 +0200
++++ gnutls/lib/x509/verify-high2.c	2016-05-11 21:32:00.596348074 +0200
+@@ -37,6 +37,10 @@
+ 
+ #include <dirent.h>
  
 +#include <windows.h>
 +#include <tchar.h>
 +
- /* Convenience functions for verify-high functionality 
-  */
- 
-@@ -368,29 +371,59 @@
++
+ #ifndef _DIRENT_HAVE_D_TYPE
+ # ifdef DT_UNKNOWN
+ #  define _DIRENT_HAVE_D_TYPE
+@@ -366,14 +370,40 @@
  	return ret;
  }
  
@@ -53,29 +54,35 @@
  	int ret;
  	int r = 0;
  	char path[GNUTLS_PATH_MAX];
+@@ -381,11 +411,13 @@
+ 	struct dirent e;
+ #endif
  
 -	dirp = opendir(dirname);
-+	TCHAR* dirnameW = ToWide(dirname);
++    TCHAR* dirnameW = ToWide(dirname);
 +	dirp = _topendir(dirnameW);
-+	free(dirnameW);
++    free(dirnameW);
  	if (dirp != NULL) {
  		do {
+ #ifdef _WIN32
 -			d = readdir(dirp);
 +			d = _treaddir(dirp);
- 			if (d != NULL
- #ifdef _DIRENT_HAVE_D_TYPE
- 				&& (d->d_type == DT_REG || d->d_type == DT_LNK || d->d_type == DT_UNKNOWN)
+ 			if (d != NULL) {
+ #else
+ 			ret = readdir_r(dirp, &e, &d);
+@@ -395,8 +427,10 @@
  #endif
  			) {
+ #endif
 +                char* d_name = FromWide(d->d_name);
  				snprintf(path, sizeof(path), "%s/%s",
 -					 dirname, d->d_name);
 +					 dirname, d_name);
-+				free(d_name);
++                free(d_name);
  
  				if (crl != 0) {
  					ret =
-@@ -408,7 +441,7 @@
+@@ -414,7 +448,7 @@
  			}
  		}
  		while (d != NULL);
-- 
2.10.1.windows.1

