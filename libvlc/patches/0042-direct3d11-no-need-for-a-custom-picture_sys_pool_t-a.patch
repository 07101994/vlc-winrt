From 653843b9bc2c48810ad935e9007dc08f7faf52e8 Mon Sep 17 00:00:00 2001
From: Steve Lhomme <robux4@videolabs.io>
Date: Tue, 24 Jan 2017 12:55:52 +0100
Subject: [PATCH 42/53] direct3d11: no need for a custom picture_sys_pool_t
 anymore

---
 modules/video_output/win32/direct3d11.c | 42 ++++-----------------------------
 1 file changed, 5 insertions(+), 37 deletions(-)

diff --git a/modules/video_output/win32/direct3d11.c b/modules/video_output/win32/direct3d11.c
index db5c5da..575152f 100644
--- a/modules/video_output/win32/direct3d11.c
+++ b/modules/video_output/win32/direct3d11.c
@@ -150,13 +150,6 @@ struct vout_display_sys_t
     picture_t                **d3dregions;
 };
 
-/* internal picture_t pool  */
-typedef struct
-{
-    ID3D11Texture2D               *texture;
-    vout_display_t                *vd;
-} picture_sys_pool_t;
-
 /* matches the D3D11_INPUT_ELEMENT_DESC we setup */
 typedef struct d3d_vertex_t {
     struct {
@@ -211,7 +204,6 @@ static void Direct3D11DestroyResources(vout_display_t *);
 static int  Direct3D11CreatePool (vout_display_t *, video_format_t *);
 static void Direct3D11DestroyPool(vout_display_t *);
 
-static void DestroyDisplayPicture(picture_t *);
 static void DestroyDisplayPoolPicture(picture_t *);
 static void Direct3D11DeleteRegions(int, picture_t **);
 static int Direct3D11MapSubpicture(vout_display_t *, int *, picture_t ***, subpicture_t *);
@@ -400,14 +392,12 @@ static const char *globPixelShaderBiplanarYUYV_2RGB = "\
 
 static int Direct3D11MapPoolTexture(picture_t *picture)
 {
-    picture_sys_pool_t *p_sys = (picture_sys_pool_t*) picture->p_sys;
-    vout_display_t     *vd = p_sys->vd;
+    picture_sys_t *p_sys = picture->p_sys;
     D3D11_MAPPED_SUBRESOURCE mappedResource;
     HRESULT hr;
-    hr = ID3D11DeviceContext_Map(vd->sys->d3dcontext, (ID3D11Resource *)p_sys->texture, 0, D3D11_MAP_WRITE_DISCARD, 0, &mappedResource);
+    hr = ID3D11DeviceContext_Map(p_sys->context, p_sys->resource[KNOWN_DXGI_INDEX], 0, D3D11_MAP_WRITE_DISCARD, 0, &mappedResource);
     if( FAILED(hr) )
     {
-        msg_Dbg( vd, "failed to map the texture (hr=0x%lX)", hr );
         return VLC_EGENERIC;
     }
     return CommonUpdatePicture(picture, NULL, mappedResource.pData, mappedResource.RowPitch);
@@ -415,9 +405,8 @@ static int Direct3D11MapPoolTexture(picture_t *picture)
 
 static void Direct3D11UnmapPoolTexture(picture_t *picture)
 {
-    picture_sys_pool_t *p_sys = (picture_sys_pool_t*)picture->p_sys;
-    vout_display_t     *vd = p_sys->vd;
-    ID3D11DeviceContext_Unmap(vd->sys->d3dcontext, (ID3D11Resource *)p_sys->texture, 0);
+    picture_sys_t *p_sys = picture->p_sys;
+    ID3D11DeviceContext_Unmap(p_sys->context, p_sys->resource[KNOWN_DXGI_INDEX], 0);
 }
 
 #if !VLC_WINSTORE_APP
@@ -789,17 +778,6 @@ static void DestroyDisplayPoolPicture(picture_t *picture)
 }
 #endif
 
-static void DestroyDisplayPicture(picture_t *picture)
-{
-    picture_sys_pool_t *p_sys = (picture_sys_pool_t*) picture->p_sys;
-
-    if (p_sys->texture)
-        ID3D11Texture2D_Release(p_sys->texture);
-
-    free(p_sys);
-    free(picture);
-}
-
 static HRESULT UpdateBackBuffer(vout_display_t *vd)
 {
     vout_display_sys_t *sys = vd->sys;
@@ -1750,24 +1728,14 @@ static int Direct3D11CreatePool(vout_display_t *vd, video_format_t *fmt)
         /* a D3D11VA pool will be created when needed */
         return VLC_SUCCESS;
 
-    picture_sys_pool_t *poolsys = calloc(1, sizeof(*poolsys));
-    if (unlikely(poolsys == NULL)) {
-        return VLC_ENOMEM;
-    }
-    poolsys->texture  = sys->picQuad.pTexture[KNOWN_DXGI_INDEX];
-    poolsys->vd       = vd;
-
     picture_resource_t resource = {
-        .p_sys = (picture_sys_t*) poolsys,
-        .pf_destroy = DestroyDisplayPicture,
+        .p_sys = &sys->picQuad.picSys,
     };
 
     picture_t *picture = picture_NewFromResource(fmt, &resource);
     if (!picture) {
-        free(poolsys);
         return VLC_ENOMEM;
     }
-    ID3D11Texture2D_AddRef(poolsys->texture);
 
     picture_pool_configuration_t pool_cfg;
     memset(&pool_cfg, 0, sizeof(pool_cfg));
-- 
2.10.1.windows.1

