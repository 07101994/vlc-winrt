From c550a6147219211d8a3f7f16baf03c7108318411 Mon Sep 17 00:00:00 2001
From: Steve Lhomme <robux4@videolabs.io>
Date: Mon, 24 Jul 2017 13:03:51 +0200
Subject: [PATCH 12/12] direct3d11: fix decoder padding not working with
 Qualcomm chipsets

---
 modules/video_output/win32/direct3d11.c | 27 ++++++++++++++++++++++++++-
 1 file changed, 26 insertions(+), 1 deletion(-)

diff --git a/modules/video_output/win32/direct3d11.c b/modules/video_output/win32/direct3d11.c
index 291b518..285f83f 100644
--- a/modules/video_output/win32/direct3d11.c
+++ b/modules/video_output/win32/direct3d11.c
@@ -757,6 +757,31 @@ error:
     return VLC_EGENERIC;
 }
 
+static bool CanUseDecoderPadding(vout_display_t *vd)
+{
+#ifndef HAVE_ID3D11VIDEODECODER
+    (void) vd;
+    return true;
+#else
+    vout_display_sys_t *sys = vd->sys;
+    TCHAR szData[256];
+    DWORD len = 256;
+    IDXGIAdapter *pAdapter = D3D11DeviceAdapter(sys->d3ddevice);
+    if (!pAdapter)
+        return false;
+
+    DXGI_ADAPTER_DESC adapterDesc;
+    HRESULT hr = IDXGIAdapter_GetDesc(pAdapter, &adapterDesc);
+    IDXGIAdapter_Release(pAdapter);
+    if (FAILED(hr))
+        return false;
+
+    /* Qualcomm hardware has issues with textures and pixels that should not be
+    * part of the decoded area */
+    return adapterDesc.VendorId != 0x4D4F4351;
+#endif
+}
+
 static picture_pool_t *Pool(vout_display_t *vd, unsigned pool_size)
 {
     /* compensate for extra hardware decoding pulling extra pictures from our pool */
@@ -777,7 +802,7 @@ static picture_pool_t *Pool(vout_display_t *vd, unsigned pool_size)
         pool_size = 1;
 
     video_format_t surface_fmt = vd->fmt;
-    if (is_d3d11_opaque(surface_fmt.i_chroma))
+    if (is_d3d11_opaque(surface_fmt.i_chroma) && CanUseDecoderPadding(vd))
     {
         /* worst case scenario we need 128 alignment for HEVC */
         surface_fmt.i_width  = (surface_fmt.i_width  + 0x7F) & ~0x7F;
-- 
2.10.1.windows.1

